<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.thomsonreuters.modules.am.IDao.UserDao" >
	<resultMap id="BaseResultMap" type="com.thomsonreuters.modules.am.domain.User" >
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="salt" property="salt" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List" >id, username, password, salt</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
		select
		<include refid="Base_Column_List" />
		from sys_users
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >delete from sys_users
		where id = #{id,jdbcType=INTEGER}</delete>
	<insert id="insert" parameterType="com.thomsonreuters.modules.am.domain.User" >insert into sys_users (id, username, password,
		salt)
		values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
		#{salt,jdbcType=VARCHAR})</insert>
	<insert id="insertSelective" parameterType="com.thomsonreuters.modules.am.domain.User" >
		insert into sys_users
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="id != null" >id,</if>
			<if test="username != null" >username,</if>
			<if test="password != null" >password,</if>
			<if test="salt != null" >salt,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="id != null" >#{id,jdbcType=INTEGER},</if>
			<if test="username != null" >#{username,jdbcType=VARCHAR},</if>
			<if test="password != null" >#{password,jdbcType=VARCHAR},</if>
			<if test="salt != null" >#{salt,jdbcType=VARCHAR},</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.thomsonreuters.modules.am.domain.User" >
		update sys_users
		<set >
			<if test="username != null" >username = #{username,jdbcType=VARCHAR},</if>
			<if test="password != null" >password = #{password,jdbcType=VARCHAR},</if>
			<if test="salt != null" >salt = #{salt,jdbcType=VARCHAR},</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.thomsonreuters.modules.am.domain.User" >update sys_users
		set username = #{username,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		salt = #{salt,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}</update>

	<!-- new added -->
	<select id="findUsers" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_users
		<where>  
	      <if test="username != null and username != ''">  
	        username like CONCAT('%',#{username},'%')
	      </if> 
	    </where> 
	</select>
	<select id="findByUsername" resultMap="BaseResultMap" parameterType="String" >
		select
		<include refid="Base_Column_List" />
		from sys_users
		where username = #{username,jdbcType=VARCHAR}
	</select>
	<select id="findRoles" resultType="String" parameterType="String" >select r.role
		from sys_users u, sys_roles r,sys_users_roles ur
		where u.username = #{username,jdbcType=VARCHAR}
		and u.id = ur.user_id
		and r.id = ur.role_id</select>
	<select id="findPermissions" resultType="String" parameterType="String" >select p.permission
		from sys_users u, sys_roles r, sys_permissions p, sys_users_roles ur, sys_roles_permissions rp
		where u.username = #{username,jdbcType=VARCHAR}
		and u.id = ur.user_id
		and r.id = ur.role_id
		and r.id = rp.role_id
		and p.id = rp.permission_id</select>
</mapper>