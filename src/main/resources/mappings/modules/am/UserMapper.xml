<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.thomsonreuters.modules.am.IDao.UserDao" >
	<resultMap id="BaseResultMap" type="com.thomsonreuters.modules.am.domain.User" >
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="salt" property="salt" jdbcType="VARCHAR" />
		<result column="locked" property="locked" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="create_by" property="createBy.id" jdbcType="INTEGER" />
	    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
	    <result column="modify_by" property="modifyBy.id" jdbcType="INTEGER" />
	    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
	    <result column="role" property="role.role" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List" >id, username, password, salt, locked, name, email</sql>
	<select id="get" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
		select r.role, u.*
        from sys_users u 
        left join sys_users_roles ur on u.id = ur.user_id
        left join sys_roles r on r.id = ur.role_id       
		where u.id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="delete" parameterType="com.thomsonreuters.modules.am.domain.User" >
		delete from sys_users
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.thomsonreuters.modules.am.domain.User" useGeneratedKeys="true" keyProperty="id">
	    insert into sys_users
	    <trim prefix="(" suffix=")" suffixOverrides=",">
	      <if test="username != null">
	        username,
	      </if>
	      <if test="password != null">
	        password,
	      </if>
	      <if test="salt != null">
	        salt,
	      </if>
	      <if test="locked != null">
	        locked,
	      </if>
	      <if test="name != null">
	        name,
	      </if>
	      <if test="email != null">
	        email,
	      </if>
	      <if test="createBy != null">
	        create_by,
	      </if>
	      <if test="createDate != null">
	        create_date,
	      </if>
	      <if test="modifyBy != null">
	        modify_by,
	      </if>
	      <if test="modifyDate != null">
	        modify_date,
	      </if>
	    </trim>
	    <trim prefix="values (" suffix=")" suffixOverrides=",">
	      <if test="username != null">
	        #{username,jdbcType=VARCHAR},
	      </if>
	      <if test="password != null">
	        #{password,jdbcType=VARCHAR},
	      </if>
	      <if test="salt != null">
	        #{salt,jdbcType=VARCHAR},
	      </if>
	      <if test="locked != null">
	        #{locked,jdbcType=BIT},
	      </if>
	      <if test="name != null">
	        #{name,jdbcType=VARCHAR},
	      </if>
	      <if test="email != null">
	        #{email,jdbcType=VARCHAR},
	      </if>
	      <if test="createBy != null">
	        #{createBy.id,jdbcType=INTEGER},
	      </if>
	      <if test="createDate != null">
	        #{createDate,jdbcType=TIMESTAMP},
	      </if>
	      <if test="modifyBy != null">
	        #{modifyBy.id,jdbcType=INTEGER},
	      </if>
	      <if test="modifyDate != null">
	        #{modifyDate,jdbcType=TIMESTAMP},
	      </if>
	    </trim>
	  </insert>
	  <update id="update" parameterType="com.thomsonreuters.modules.am.domain.User">
	    update sys_users
	    <set>
	      <if test="username != null">
	        username = #{username,jdbcType=VARCHAR},
	      </if>
	      <if test="password != null">
	        password = #{password,jdbcType=VARCHAR},
	      </if>
	      <if test="salt != null">
	        salt = #{salt,jdbcType=VARCHAR},
	      </if>
	      <if test="locked != null">
	        locked = #{locked,jdbcType=BIT},
	      </if>
	      <if test="name != null">
	        name = #{name,jdbcType=VARCHAR},
	      </if>
	      <if test="email != null">
	        email = #{email,jdbcType=VARCHAR},
	      </if>
	      <if test="createBy != null">
	        create_by = #{createBy.id,jdbcType=INTEGER},
	      </if>
	      <if test="createDate != null">
	        create_date = #{createDate,jdbcType=TIMESTAMP},
	      </if>
	      <if test="modifyBy != null">
	        modify_by = #{modifyBy.id,jdbcType=INTEGER},
	      </if>
	      <if test="modifyDate != null">
	        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
	      </if>
	    </set>
	    where id = #{id,jdbcType=BIGINT}
	  </update>

	<!-- new added -->
	<insert id="insertUserRole">
		insert into sys_users_roles 
		select #{id,jdbcType=BIGINT}, id from sys_roles where role = #{role.role,jdbcType=VARCHAR}
	</insert>
	<delete id="deleteUserRole">
		delete from sys_users_roles WHERE user_id = #{id,jdbcType=BIGINT}
	</delete>
	
	<select id="getByUsername" resultMap="BaseResultMap" parameterType="String" >
		select r.role, u.*
        from sys_users u 
        left join sys_users_roles ur on u.id = ur.user_id
        left join sys_roles r on r.id = ur.role_id       
		where username = #{username,jdbcType=VARCHAR}
	</select>
	<select id="findUsers" resultMap="BaseResultMap">
		select r.role, u.*
        from sys_users u 
        left join sys_users_roles ur on u.id = ur.user_id
        left join sys_roles r on r.id = ur.role_id       
		<where>
	      <if test="username != null and username != ''">  
	        username like CONCAT('%',#{username},'%')
	      </if> 
	    </where> 
	    order by r.id asc, u.create_date desc
	</select>
	<select id="findRoles" resultType="String" parameterType="String" >select r.role
		from sys_users u, sys_roles r,sys_users_roles ur
		where u.username = #{username,jdbcType=VARCHAR}
		and u.id = ur.user_id
		and r.id = ur.role_id</select>
	<select id="findPermissions" resultType="String" parameterType="String" >select p.permission
		from sys_users u, sys_roles r, sys_permissions p, sys_users_roles ur, sys_roles_permissions rp
		where u.username = #{username,jdbcType=VARCHAR}
		and u.id = ur.user_id
		and r.id = ur.role_id
		and r.id = rp.role_id
		and p.id = rp.permission_id</select>
</mapper>